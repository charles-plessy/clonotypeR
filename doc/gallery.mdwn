Gallery
=======

### Histogram of alignment scores ###

Assuming a single library loaded in a data frame called _clonotypes_ with the [[`read_clonotypes()`|html_doc/read_clonotypes.html]] function:

<pre>
hist(log(clonotypes$score)
</pre>

[[!img histogram.png link="histogram.svg" alt="Alignment score histogram"]]

### Scale-free distribution of the clonotype expression levels ###

Assuming table _a_ of clonotype counts produced with the [[`clonotype_table()`|html_doc/clonotype_table.html]] function, the following
commands study the first library in that table.

<pre>
library(vegan)
plot(radfit(a[[1]]), log="xy")
</pre>

[[!img powerlaw.png link="powerlaw.svg" alt="Scale-free distribution of the data"]]

### Grouping libraries by bootstraped hierarchical clustering ###

Assuming table _a_ of clonotype counts produced with the [[`clonotype_table()`|html_doc/clonotype_table.html]] function, containing six libraries (for instance two biological triplicates).

[[!img clustering.png link="clustering.svg" alt="Similar libraries group together"]]

<pre>
library(pvclust)
plot(pvclust(a, n=1000))
</pre>

### Differential expression analysis ###

Assuming table _a_ of clonotype counts produced with the [[`clonotype_table()`|html_doc/clonotype_table.html]] function, containing six libraries (for instance two biological triplicates).

This representation is similar to _MA plots_ used in microarray and digital expression analysis, where the _x_ axis represents the average expression strength, and the _y_ axis represents the fold change (both on a logarithmic scale). Black dots represent clonotypes over-represented in one population compared to the other.

<pre>
library(edgeR)
a.dge <- DGEList(counts=a,group=c("B","A","A","B","A","B"))
a.dge <- estimateTagwiseDisp(DGEList(counts=a,group=c("B","A","A","B","A","B")))
a.dge.com <- exactTest(a.dge)
     detags <- function (COMPARISON, ADJUST="fdr", P=0.05, SORTBY="PValue", DIRECTION="all") {
       if (DIRECTION == "all") {
         significant <- ! decideTestsDGE(COMPARISON, adjust.method=ADJUST, p.value=P) == 0
       }
       if (DIRECTION == "up") {
         significant <- decideTestsDGE(COMPARISON, adjust.method=ADJUST, p.value=P) > 0
       }
       if (DIRECTION == "down") {
         significant <- decideTestsDGE(COMPARISON, adjust.method=ADJUST, p.value=P) < 0
       }
       significant <- COMPARISON$table[significant,]
       significant <- significant[order(significant[,SORTBY]),]
       rownames (significant)
     }
plotSmear(a.dge.dedup, allCol="grey", lowCol="grey", deCol="black", de.tags=detags(a.dge.com))
</pre>

[[!img DGE.png link="DGE.svg" alt="Differential clonotype expression analysis"]]
