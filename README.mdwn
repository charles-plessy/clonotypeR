clonotypeR
==========

Requirements
------------

 * [sff_extract][], to convert the 454 SFF files to FASTQ format.
 * [EMBOSS][], to manipulate the reference sequences.
 * [moreutils][], for the the <code>sponge</code> command.
 * [BWA][] (Burrows-Wheeler Aligner), to identify the trimmed V segments.
 * [BioPerl][] (> 1.6.9), to translate the CDRs.  Lower versions differ on how they translate incomplete last codons.
 * [Pandoc][] is needed for building the manual page of `clonotypeR`.

[sff_extract]:	http://bioinf.comav.upv.es/sff_extract/download
[EMBOSS]:	http://www.emboss.org	"The European Molecular Biology Open Software Suite"
[moreutils]:	http://kitenet.net/~joey/code/moreutils/	"a growing collection of the unix tools that nobody thought to write long ago when unix was young."
[BWA]:		http://bio-bwa.sourceforge.net/	"Burrows-Wheeler Aligner"
[BioPerl]:	http://bio.perl.org/ "BioPerl"
[Pandoc]:	http://johnmacfarlane.net/pandoc/


Conversions to FASTQ
--------------------

### From AB1 files

This create a single FASTQ file from a directory containing individual AB1
trace files.

<pre>
function abi2fastq {
  for ABI in *ab1
  do
    seqret -filter abi::$ABI fastq-sanger::stdout |
    descseq -filter fastq-sanger::stdin fastq-sanger::stdout -name $(basename $ABI .ab1)
  done
}

[ -d fastq ]            || mkdir fastq
( cd example/library1/ && abi2fastq > ../fastq/library1.fastq )
</pre>

### From SFF files

<code>sff_extract</code> converts the sff file to FASTQ format.  As it is used
here, it does not clip adaptor sequence nor low-quality parts.

<pre>
[ -d extraction_files ] || mkdir extraction_files
[ -d fastq ]            || mkdir fastq

sff_extract sff/example-library1.sff -x /dev/null --out_basename=fastq/example-library1.fastq -Q
</pre>
