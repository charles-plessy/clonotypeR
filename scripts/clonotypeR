#!/bin/bash

set -ex

# Path to the reference V and J segments defaults to /etc/clonotyper/references.
CLONOTYPER_REFERENCE=${CLONOTYPER_REFERENCE:-/etc/clonotyper/references}

# Path to VJsplit defaults to /usr/share/clonotyper.
CLONOTYPER_SCRIPTS=${CLONOTYPER_SCRIPTS:-/usr/share/clonotyper}

# Path to the BAM and temporary files defaults to extraction_files.
EXTRACT_DIR=${EXTRACT_DIR:-extraction_files}

# Auto-detect number of threads.
THREADS=$([ -e /proc/cpuinfo ] && cat /proc/cpuinfo | grep -c processor)

function test_extract_dir {
	if ! [ -d $EXTRACT_DIR ]
	then
	  echo "Error: could not find the directory '$EXTRACT_DIR'. $?"
	  exit 1
	fi
}

case $1 in
	convert)
	;;
	detect)
		shift
		test_extract_dir
		for FASTQ_FILE in "$*"
		do
			LIBRARY=$(basename $FASTQ_FILE .fq)
			LIBRARY=$(basename $FASTQ_FILE .fastq)
			bwa bwasw -t${THREADS:-1} $CLONOTYPER_REFERENCE/V/index $FASTQ_FILE |
				samtools view -Su - |
				samtools sort - $EXTRACT_DIR/$LIBRARY
			samtools index $EXTRACT_DIR/$LIBRARY.bam
		done
	;;
	extract)
		shift
		test_extract_dir
		for BAM_FILE in "$*"
		do
			LIBRARY=$(basename $BAM_FILE .bam)
			$CLONOTYPER_SCRIPTS/VJsplit $LIBRARY
		done
	;;
	*)
		echo "Usage: clonotypeR convert file1.ab1 file2.ab1 ..."
		echo "       clonotypeR convert file1.sff file2.sff ..."
		echo "       clonotypeR detect  file1.fastq file2.fastq ..."
		echo "       clonotypeR extract file1.bam file2.bam ..."
		exit 1
	;;
esac
